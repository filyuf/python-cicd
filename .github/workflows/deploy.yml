name: Belajar CI/CD Python

on:
  push:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  build:
    needs: install  # Build hanya berjalan jika install selesai sukses
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build & Push Docker Image
        run: |
          IMAGE_TAG=${{ secrets.ECR_REGISTRY }}/flask-app:${{ github.sha }}
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Update Elastic Beanstalk to use new Docker image
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --option-settings Namespace=aws:elasticbeanstalk:environment:process:default,OptionName=Image,Value=${{ secrets.ECR_REGISTRY }}/flask-app:${{ github.sha }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}

      - name: Check Elastic Beanstalk Health
        run: |
          aws elasticbeanstalk describe-environment-health \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --attribute-status HealthStatus
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}
